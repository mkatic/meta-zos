Index: xorg-server-1.7.99.2/hw/kdrive/fbdev/fbdev.c
===================================================================
--- xorg-server-1.7.99.2.orig/hw/kdrive/fbdev/fbdev.c	2011-10-19 12:22:03.000000000 +0200
+++ xorg-server-1.7.99.2/hw/kdrive/fbdev/fbdev.c	2011-10-19 12:22:53.000000000 +0200
@@ -63,11 +63,7 @@
 	return FALSE;
     }
 
-    priv->fb_base = (char *) mmap ((caddr_t) NULL,
-				   priv->fix.smem_len,
-				   PROT_READ|PROT_WRITE,
-				   MAP_SHARED,
-				   priv->fd, 0);
+    priv->fb_base = (char *) ioctl(priv->fd, FBIOGET_VRAM_START_ADDRESS, 0);
     
     if (priv->fb_base == (char *)-1) 
     {
Index: xorg-server-1.7.99.2/hw/kdrive/src/kshadow.c
===================================================================
--- xorg-server-1.7.99.2.orig/hw/kdrive/src/kshadow.c	2011-10-19 12:26:12.000000000 +0200
+++ xorg-server-1.7.99.2/hw/kdrive/src/kshadow.c	2011-10-19 12:27:40.000000000 +0200
@@ -26,21 +26,25 @@
 #include <kdrive-config.h>
 #endif
 #include "kdrive.h"
+#include "../fbdev/fbdev.h"
 
 Bool
 KdShadowFbAlloc (KdScreenInfo *screen, int fb, Bool rotate)
 {
     int	    paddedWidth;
     void    *buf;
+    int		fd;
     int	    width = rotate ? screen->height : screen->width;
     int	    height = rotate ? screen->width : screen->height;
     int	    bpp = screen->fb[fb].bitsPerPixel;
 
+	fd = open("/dev/fb0", O_RDWR);
     /* use fb computation for width */
     paddedWidth = ((width * bpp + FB_MASK) >> FB_SHIFT) * sizeof (FbBits);
-    buf = xalloc (paddedWidth * height);
+    buf = (char *) ioctl(fd, FBIOGET_VRAM_END_ADDRESS, 0) - (paddedWidth * height);
     if (!buf)
-	return FALSE;
+		return FALSE;
+	close(fd);
     if (screen->fb[fb].shadow)
 	xfree (screen->fb[fb].frameBuffer);
     screen->fb[fb].shadow = TRUE;
