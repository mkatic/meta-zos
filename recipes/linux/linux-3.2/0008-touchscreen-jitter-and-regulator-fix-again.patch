From a8fe85c79a29c3456beff91f60c388405b3df674 Mon Sep 17 00:00:00 2001
From: Marko Katic <dromede.gmail.com>
Date: Thu, 5 Jan 2012 16:29:21 +0100
Subject: [PATCH 08/15] touchscreen jitter and regulator fix, again.

---
 arch/arm/mach-pxa/spitz.c           |    4 +++
 drivers/input/touchscreen/ads7846.c |   43 +++++++++++++++++++++-------------
 2 files changed, 30 insertions(+), 17 deletions(-)

diff --git a/arch/arm/mach-pxa/spitz.c b/arch/arm/mach-pxa/spitz.c
index c0ba321..9d11f53 100644
--- a/arch/arm/mach-pxa/spitz.c
+++ b/arch/arm/mach-pxa/spitz.c
@@ -506,9 +506,13 @@ static void spitz_ads7846_wait_for_hsync(void)
 static struct ads7846_platform_data spitz_ads7846_info = {
 	.model			= 7846,
 	.vref_delay_usecs	= 100,
+	.settle_delay_usecs	= 100, /* FIXME */
 	.x_plate_ohms		= 419,
 	.y_plate_ohms		= 486,
 	.pressure_max		= 1024,
+	.debounce_max		= 6,
+	.debounce_tol		= 9,
+	.debounce_rep		= 1,
 	.gpio_pendown		= SPITZ_GPIO_TP_INT,
 	.wait_for_sync		= spitz_ads7846_wait_for_hsync,
 };
diff --git a/drivers/input/touchscreen/ads7846.c b/drivers/input/touchscreen/ads7846.c
index de31ec6..eaa20bd 100644
--- a/drivers/input/touchscreen/ads7846.c
+++ b/drivers/input/touchscreen/ads7846.c
@@ -225,7 +225,8 @@ static void ads7846_restart(struct ads7846 *ts)
 static void __ads7846_disable(struct ads7846 *ts)
 {
 	ads7846_stop(ts);
-	regulator_disable(ts->reg);
+	if (ts->reg)
+		regulator_disable(ts->reg);
 
 	/*
 	 * We know the chip's in low power mode since we always
@@ -236,7 +237,8 @@ static void __ads7846_disable(struct ads7846 *ts)
 /* Must be called with ts->lock held */
 static void __ads7846_enable(struct ads7846 *ts)
 {
-	regulator_enable(ts->reg);
+	if (ts->reg)
+		regulator_enable(ts->reg);
 	ads7846_restart(ts);
 }
 
@@ -1302,17 +1304,20 @@ static int __devinit ads7846_probe(struct spi_device *spi)
 
 	ads7846_setup_spi_msg(ts, pdata);
 
-	ts->reg = regulator_get(&spi->dev, "vcc");
-	if (IS_ERR(ts->reg)) {
-		err = PTR_ERR(ts->reg);
-		dev_err(&spi->dev, "unable to get regulator: %d\n", err);
-		goto err_free_gpio;
-	}
-
-	err = regulator_enable(ts->reg);
-	if (err) {
-		dev_err(&spi->dev, "unable to enable regulator: %d\n", err);
-		goto err_put_regulator;
+	if (0 /* FIXME */ ) {
+		ts->reg = regulator_get(&spi->dev, "vcc");
+		if (IS_ERR(ts->reg)) {
+			err = PTR_ERR(ts->reg);
+			dev_err(&spi->dev, "unable to get regulator: %d\n", err);
+			goto err_free_gpio;
+		}
+		err = regulator_enable(ts->reg);
+		if (err) {
+			dev_err(&spi->dev, "unable to enable regulator: %d\n", err);
+			goto err_put_regulator;
+		}
+	} else {
+		ts->reg = NULL;
 	}
 
 	irq_flags = pdata->irq_flags ? : IRQF_TRIGGER_FALLING;
@@ -1368,9 +1373,11 @@ static int __devinit ads7846_probe(struct spi_device *spi)
  err_free_irq:
 	free_irq(spi->irq, ts);
  err_disable_regulator:
-	regulator_disable(ts->reg);
+	if (ts->reg)
+		regulator_disable(ts->reg);
  err_put_regulator:
-	regulator_put(ts->reg);
+	if (ts->reg)
+		regulator_put(ts->reg);
  err_free_gpio:
 	if (!ts->get_pendown_state)
 		gpio_free(ts->gpio_pendown);
@@ -1399,8 +1406,10 @@ static int __devexit ads7846_remove(struct spi_device *spi)
 
 	ads784x_hwmon_unregister(spi, ts);
 
-	regulator_disable(ts->reg);
-	regulator_put(ts->reg);
+	if (ts->reg) {
+		regulator_disable(ts->reg);
+		regulator_put(ts->reg);
+	}
 
 	if (!ts->get_pendown_state) {
 		/*
-- 
1.7.4.1

